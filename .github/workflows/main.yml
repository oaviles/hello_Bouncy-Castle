name: Building Bouncy Castle Code Sample

on: workflow_dispatch

jobs:
  
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Copy file
        run: |
          echo Moving Code File genedted by AI Sanbox
          cp ./samples_files/Program.txt ./Program.cs
        

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0.x' # Adjust the .NET version as needed

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

     # - name: Run tests
     #   run: dotnet test --no-restore --verbosity normal
  unit-test:
    runs-on: ubuntu-latest
    if: ${{ success() }}
    needs: build
    steps:
      - name: Init Test
        uses: oaviles/javascript_action@v1.1
        with:
          message: 'Init Test Running'

  deploy-infra:
    runs-on: ubuntu-latest
    if: ${{ success() }}
    needs: unit-test
    steps:
      - name: Init Test
        uses: oaviles/javascript_action@v1.1
        with:
          message: 'Deploying Infra'

  deploy-code:
    if: ${{ success() }}
    needs: [deploy-infra]
    runs-on: ubuntu-latest
    environment:
      name: qa
      url: 'https://oaappi1.gentledesert-a9b150d6.eastus.azurecontainerapps.io/weatherforecast'  
    steps:
      - name: Deploy QA Enviroment
        id: javascriptaction
        uses: oaviles/javascript_action@v1.1
        with:
          message: 'Deploy QA Env'

  clean-repo:
    if: ${{ success() }}
    needs: deploy-code
    runs-on: ubuntu-latest  
    
    steps:

      - name: Clean Project
        run: |
          cd samples_files
     #     if [ -f Program.txt ]; then
     #       git rm Program.txt
     #       git commit -m "Delete temporal file Program.txt"
     #       git push
     #     else
     #       echo "File Program.txt does not exist"
     #     fi
    
   #   - name: Clear
   #     env:
   #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
   #     run: |
   #       FILE_PATH="samples_files/Program.txt"
   #       REPO_OWNER=$(echo $GITHUB_REPOSITORY | cut -d'/' -f1)
   #       REPO_NAME=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)
   #       FILE_SHA=$(curl -s -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/contents/$FILE_PATH | jq -r .sha)
   #       curl -X DELETE -H "Authorization: token $GITHUB_TOKEN" -d '{"message": "Delete Program.txt", "sha": "'$FILE_SHA'"}' https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/contents/$FILE_PATH
